apply from: "${parent.projectDir}/common.gradle"
buildscript {
    apply from: "${parent.projectDir}/common.gradle"

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-milestone/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

apply plugin: "java"
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

group 'com.sapling'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-config:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-starter-eureka:${springCloudNetfixVersion}"
    }
}
dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile "org.springframework.cloud:spring-cloud-config-server"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
}

repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }

}

def appMainClass="com.sapling.example.springcloud.config.ConfigApplication"

jar {
    //bootJar必须要开启此参数
    enabled = true
    //添加依懒到打包文件(放开后，依赖的jar包都将以class的形式打到jar包中)
    from {
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//        configurations.runtime.collect { zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': appMainClass
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')
}

task release(type: Copy, dependsOn: [build, clearJar, copyJar])
